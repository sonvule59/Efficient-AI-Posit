Terminals which are not used

   MINUS
   DIV
   LBRACE
   RBRACE


State 24 conflicts: 2 shift/reduce
State 25 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: type IDENTIFIER ASSIGN expression SEMICOLON
    5          | expression SEMICOLON

    6 type: POSIT8
    7     | POSIT16
    8     | POSIT32
    9     | QUIRE32
   10     | FLOAT
   11     | DOUBLE

   12 expression: POSIT_LITERAL
   13           | IDENTIFIER
   14           | expression PLUS expression
   15           | expression MULT expression
   16           | LPAREN expression RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
POSIT8 (258) 6
POSIT16 (259) 7
POSIT32 (260) 8
QUIRE32 (261) 9
FLOAT (262) 10
DOUBLE (263) 11
POSIT_LITERAL (264) 12
IDENTIFIER (265) 4 13
PLUS (266) 14
MINUS (267)
MULT (268) 15
DIV (269)
ASSIGN (270) 4
SEMICOLON (271) 4 5
LPAREN (272) 16
RPAREN (273) 16
LBRACE (274)
RBRACE (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
statements (23)
    on left: 2 3, on right: 1 3
statement (24)
    on left: 4 5, on right: 2 3
type (25)
    on left: 6 7 8 9 10 11, on right: 4
expression (26)
    on left: 12 13 14 15 16, on right: 4 5 14 15 16


state 0

    0 $accept: . program $end

    POSIT8         shift, and go to state 1
    POSIT16        shift, and go to state 2
    POSIT32        shift, and go to state 3
    QUIRE32        shift, and go to state 4
    FLOAT          shift, and go to state 5
    DOUBLE         shift, and go to state 6
    POSIT_LITERAL  shift, and go to state 7
    IDENTIFIER     shift, and go to state 8
    LPAREN         shift, and go to state 9

    program     go to state 10
    statements  go to state 11
    statement   go to state 12
    type        go to state 13
    expression  go to state 14


state 1

    6 type: POSIT8 .

    $default  reduce using rule 6 (type)


state 2

    7 type: POSIT16 .

    $default  reduce using rule 7 (type)


state 3

    8 type: POSIT32 .

    $default  reduce using rule 8 (type)


state 4

    9 type: QUIRE32 .

    $default  reduce using rule 9 (type)


state 5

   10 type: FLOAT .

    $default  reduce using rule 10 (type)


state 6

   11 type: DOUBLE .

    $default  reduce using rule 11 (type)


state 7

   12 expression: POSIT_LITERAL .

    $default  reduce using rule 12 (expression)


state 8

   13 expression: IDENTIFIER .

    $default  reduce using rule 13 (expression)


state 9

   16 expression: LPAREN . expression RPAREN

    POSIT_LITERAL  shift, and go to state 7
    IDENTIFIER     shift, and go to state 8
    LPAREN         shift, and go to state 9

    expression  go to state 15


state 10

    0 $accept: program . $end

    $end  shift, and go to state 16


state 11

    1 program: statements .
    3 statements: statements . statement

    POSIT8         shift, and go to state 1
    POSIT16        shift, and go to state 2
    POSIT32        shift, and go to state 3
    QUIRE32        shift, and go to state 4
    FLOAT          shift, and go to state 5
    DOUBLE         shift, and go to state 6
    POSIT_LITERAL  shift, and go to state 7
    IDENTIFIER     shift, and go to state 8
    LPAREN         shift, and go to state 9

    $default  reduce using rule 1 (program)

    statement   go to state 17
    type        go to state 13
    expression  go to state 14


state 12

    2 statements: statement .

    $default  reduce using rule 2 (statements)


state 13

    4 statement: type . IDENTIFIER ASSIGN expression SEMICOLON

    IDENTIFIER  shift, and go to state 18


state 14

    5 statement: expression . SEMICOLON
   14 expression: expression . PLUS expression
   15           | expression . MULT expression

    PLUS       shift, and go to state 19
    MULT       shift, and go to state 20
    SEMICOLON  shift, and go to state 21


state 15

   14 expression: expression . PLUS expression
   15           | expression . MULT expression
   16           | LPAREN expression . RPAREN

    PLUS    shift, and go to state 19
    MULT    shift, and go to state 20
    RPAREN  shift, and go to state 22


state 16

    0 $accept: program $end .

    $default  accept


state 17

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


state 18

    4 statement: type IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 23


state 19

   14 expression: expression PLUS . expression

    POSIT_LITERAL  shift, and go to state 7
    IDENTIFIER     shift, and go to state 8
    LPAREN         shift, and go to state 9

    expression  go to state 24


state 20

   15 expression: expression MULT . expression

    POSIT_LITERAL  shift, and go to state 7
    IDENTIFIER     shift, and go to state 8
    LPAREN         shift, and go to state 9

    expression  go to state 25


state 21

    5 statement: expression SEMICOLON .

    $default  reduce using rule 5 (statement)


state 22

   16 expression: LPAREN expression RPAREN .

    $default  reduce using rule 16 (expression)


state 23

    4 statement: type IDENTIFIER ASSIGN . expression SEMICOLON

    POSIT_LITERAL  shift, and go to state 7
    IDENTIFIER     shift, and go to state 8
    LPAREN         shift, and go to state 9

    expression  go to state 26


state 24

   14 expression: expression . PLUS expression
   14           | expression PLUS expression .
   15           | expression . MULT expression

    PLUS  shift, and go to state 19
    MULT  shift, and go to state 20

    PLUS      [reduce using rule 14 (expression)]
    MULT      [reduce using rule 14 (expression)]
    $default  reduce using rule 14 (expression)


state 25

   14 expression: expression . PLUS expression
   15           | expression . MULT expression
   15           | expression MULT expression .

    PLUS  shift, and go to state 19
    MULT  shift, and go to state 20

    PLUS      [reduce using rule 15 (expression)]
    MULT      [reduce using rule 15 (expression)]
    $default  reduce using rule 15 (expression)


state 26

    4 statement: type IDENTIFIER ASSIGN expression . SEMICOLON
   14 expression: expression . PLUS expression
   15           | expression . MULT expression

    PLUS       shift, and go to state 19
    MULT       shift, and go to state 20
    SEMICOLON  shift, and go to state 27


state 27

    4 statement: type IDENTIFIER ASSIGN expression SEMICOLON .

    $default  reduce using rule 4 (statement)
